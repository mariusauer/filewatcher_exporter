name: Release Linux tgz

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-main:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'
          check-latest: true

      - name: Build Linux binary
        run: |
          GOOS=linux GOARCH=amd64 go build ./...

  build-and-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    env:
      BINARY_NAME: filewatcher-exporter
      OUTPUT_DIR: bin
      TAR_NAME: filewatcher-exporter_${{ github.ref_name }}_linux_amd64.tgz
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'
          check-latest: true

      - name: Build Linux binary
        run: |
          mkdir -p "${OUTPUT_DIR}"
          GOOS=linux GOARCH=amd64 go build -o "${OUTPUT_DIR}/${BINARY_NAME}" .

      - name: Create tarball
        run: |
          tar -czf "${TAR_NAME}" -C "${OUTPUT_DIR}" "${BINARY_NAME}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-tarball
          path: ${{ env.TAR_NAME }}

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.TAR_NAME }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
